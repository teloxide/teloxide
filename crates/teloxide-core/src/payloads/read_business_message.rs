//! Generated by `codegen_payloads`, do not edit by hand.

use serde::Serialize;

use crate::types::{BusinessConnectionId, ChatId, MessageId, True};

impl_payload! {
    /// Marks incoming message as read on behalf of a business account. Requires the _can_read_messages_ business bot right. Returns _true_ on success.
    #[derive(Debug, PartialEq, Eq, Hash, Clone, Serialize)]
    pub ReadBusinessMessage (ReadBusinessMessageSetters) => True {
        required {
            /// Unique identifier of the business connection on behalf of which to read the message
            pub business_connection_id: BusinessConnectionId,
            /// Unique identifier of the chat in which the message was received. The chat must have been active in the last 24 hours
            pub chat_id: ChatId [into],
            /// Unique identifier of the message to mark as read
            #[serde(flatten)]
            pub message_id: MessageId,
        }
    }
}
