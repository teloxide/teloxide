//! Generated by `codegen_payloads`, do not edit by hand.

use serde::Serialize;

use crate::types::{BusinessConnectionId, MessageId, True};

impl_payload! {
    /// Delete messages on behalf of a business account. Requires the _can_delete_sent_messages_ business bot right to delete messages sent by the bot itself, or the _can_delete_all_messages_ business bot right to delete any message. Returns _true_ on success.
    #[derive(Debug, PartialEq, Eq, Hash, Clone, Serialize)]
    pub DeleteBusinessMessages (DeleteBusinessMessagesSetters) => True {
        required {
            /// Unique identifier of the business connection on behalf of which to delete the messages
            pub business_connection_id: BusinessConnectionId,
            /// List of 1-100 identifiers of messages to delete. All messages must be from the same chat. See [`DeleteMessage`] for limitations on which messages can be deleted
            ///
            /// [`DeleteMessage`]: crate::payloads::DeleteMessage
            #[serde(with = "crate::types::vec_msg_id_as_vec_int")]
            pub message_ids: Vec<MessageId> [collect],
        }
    }
}
