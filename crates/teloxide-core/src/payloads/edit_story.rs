//! Generated by `codegen_payloads`, do not edit by hand.

use serde::Serialize;

use crate::types::{
    BusinessConnectionId, InputStoryContent, MessageEntity, ParseMode, Story, StoryArea, StoryId,
};

impl_payload! {
    /// Edits a story previously posted by the bot on behalf of a managed business account. Requires the _can_manage_stories_ business bot right. Returns [`Story`] on success.
    ///
    /// [`Story`]: crate::types::Story
    #[derive(Debug, Clone, Serialize)]
    pub EditStory (EditStorySetters) => Story {
        required {
            /// Unique identifier of the business connection
            pub business_connection_id: BusinessConnectionId,
            /// Unique identifier of the story to edit
            pub story_id: StoryId,
            /// Content of the story
            pub content: InputStoryContent,
        }
        optional {
            /// Caption of the story, 0-2048 characters after entities parsing
            pub caption: String [into],
            /// Mode for parsing entities in the story caption. See [formatting options] for more details
            ///
            /// [formatting options]: https://core.telegram.org/bots/api#formatting-options
            pub parse_mode: ParseMode,
            /// List of special entities that appear in the caption, which can be specified instead of _parse_mode_
            pub caption_entities: Vec<MessageEntity> [collect],
            /// List of clickable areas to be shown on the story
            pub areas: Vec<StoryArea> [collect],
        }
    }
}
