//! Generated by `codegen_payloads`, do not edit by hand.

use serde::Serialize;

use crate::types::{MessageId, Recipient, ThreadId, TopicId};

impl_payload! {
    /// Use this method to copy messages of any kind. If some of the specified messages can't be found or copied, they are skipped. Service messages, paid media messages, giveaway messages, giveaway winners messages, and invoice messages can't be copied. A quiz [`Poll`] can be copied only if the value of the field *correct_option_id* is known to the bot. The method is analogous to the method [`ForwardMessages`], but the copied messages don't have a link to the original message. Album grouping is kept for copied messages. On success, an array of [`MessageId`] of the sent messages is returned.
    ///
    /// [`Poll`]: crate::types::Poll
    /// [`MessageId`]: crate::types::MessageId
    /// [`ForwardMessages`]: crate::payloads::ForwardMessages
    #[derive(Debug, PartialEq, Eq, Hash, Clone, Serialize)]
    pub CopyMessages (CopyMessagesSetters) => Vec<MessageId> {
        required {
            /// Unique identifier for the target chat or username of the target channel (in the format `@channelusername`)
            pub chat_id: Recipient [into],
            /// Unique identifier for the chat where the original message was sent (or channel username in the format `@channelusername`)
            pub from_chat_id: Recipient [into],
            /// Identifiers of 1-100 messages in the chat _from\_chat\_id_ to copy. The identifiers must be specified in a strictly increasing order.
            #[serde(with = "crate::types::vec_msg_id_as_vec_int")]
            pub message_ids: Vec<MessageId> [collect],
        }
        optional {
            /// Unique identifier for the target message thread (topic) of the forum; for forum supergroups only
            pub message_thread_id: ThreadId,
            /// Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat
            pub direct_messages_topic_id: TopicId,
            /// Sends the message [silently]. Users will receive a notification with no sound.
            ///
            /// [silently]: https://telegram.org/blog/channels-2-0#silent-messages
            pub disable_notification: bool,
            /// Protects the contents of sent messages from forwarding and saving
            pub protect_content: bool,
            /// Pass _True_ to copy the messages without their captions
            pub remove_caption: bool,
        }
    }
}
